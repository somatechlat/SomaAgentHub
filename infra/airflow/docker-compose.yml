version: "3.9"

x-airflow-common:
  &airflow-common
  build:
    context: ../..
    dockerfile: services/airflow-service/Dockerfile
  image: somagent/airflow-service:dev
  env_file:
    - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-postgres:5432/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
    AIRFLOW__LOGGING__LOGGING_CONFIG_CLASS: airflow_logging.loki_config.LOGGING_CONFIG
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 5
    AIRFLOW__METRICS__STATSD_ON: "False"
    AIRFLOW__CORE__FERNET_KEY: "${AIRFLOW__CORE__FERNET_KEY:-4wqprSHpN5xgF7Iu1-3wHeu1ctM7j5K1GZkWdF8ZfC0=}"
    AIRFLOW__WEBSERVER__RBAC: "True"
    SOMAGENT_GATEWAY_URL: "${SOMAGENT_GATEWAY_URL:-http://gateway-api:8000}"
    SOMAGENT_GATEWAY_JWT_SECRET: "${SOMAGENT_GATEWAY_JWT_SECRET:-dev-secret}"
    SOMAGENT_AIRFLOW_TENANT: "${SOMAGENT_AIRFLOW_TENANT:-demo}"
    SOMAGENT_AIRFLOW_SUBJECT: "${SOMAGENT_AIRFLOW_SUBJECT:-airflow-service}"
  AIRFLOW_CONN_SOMA_GATEWAY: "${AIRFLOW_CONN_SOMA_GATEWAY:-http://gateway-api:8000}"
  volumes:
    - ../../services/airflow-service/dags:/opt/airflow/dags
    - ../../services/airflow-service/plugins:/opt/airflow/plugins
    - ../../services/airflow-service/airflow_logging:/opt/airflow/airflow_logging
    - airflow_logs:/opt/airflow/logs
  networks:
    - somaagenthub-network
  depends_on:
    airflow-postgres:
      condition: service_healthy
    airflow-redis:
      condition: service_started

services:
  airflow-postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    networks:
      - somaagenthub-network

  airflow-redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save "" --appendonly no
    networks:
      - somaagenthub-network

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: |
      -c "airflow db migrate && \
          airflow users create --role Admin --username admin --password admin --firstname Air --lastname Flow --email admin@soma.local || true"
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-flower:
    <<: *airflow-common
    command: flower
    ports:
      - "5555:5555"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

networks:
  somaagenthub-network:
    external: true

volumes:
  airflow_logs:
  airflow_db:
