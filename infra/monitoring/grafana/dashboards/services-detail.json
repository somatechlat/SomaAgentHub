{
  "dashboard": {
    "title": "SomaGent Services Detail",
    "tags": ["somagent", "services", "metrics"],
    "timezone": "browser",
    "schemaVersion": 27,
    "version": 1,
    "refresh": "30s",
    "templating": {
      "list": [
        {
          "name": "service",
          "type": "query",
          "query": "label_values(up{job=~\".*somagent.*\"}, service)",
          "refresh": 1,
          "multi": false,
          "includeAll": false
        }
      ]
    },
    "panels": [
      {
        "id": 1,
        "title": "$service - Request Throughput",
        "type": "graph",
        "targets": [
          {
            "expr": "sum(rate(http_requests_total{service=\"$service\"}[5m])) by (method, endpoint)",
            "refId": "A",
            "legendFormat": "{{method}} {{endpoint}}"
          }
        ],
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "yaxes": [
          {
            "label": "req/s",
            "format": "short"
          }
        ]
      },
      {
        "id": 2,
        "title": "$service - Latency Percentiles",
        "type": "graph",
        "targets": [
          {
            "expr": "histogram_quantile(0.50, sum(rate(http_request_duration_seconds_bucket{service=\"$service\"}[5m])) by (le)) * 1000",
            "refId": "A",
            "legendFormat": "p50"
          },
          {
            "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service=\"$service\"}[5m])) by (le)) * 1000",
            "refId": "B",
            "legendFormat": "p95"
          },
          {
            "expr": "histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket{service=\"$service\"}[5m])) by (le)) * 1000",
            "refId": "C",
            "legendFormat": "p99"
          }
        ],
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "yaxes": [
          {
            "label": "latency (ms)",
            "format": "ms"
          }
        ]
      },
      {
        "id": 3,
        "title": "$service - Error Rate by Status Code",
        "type": "graph",
        "targets": [
          {
            "expr": "sum(rate(http_requests_total{service=\"$service\",status=~\"4..\"}[5m])) by (status)",
            "refId": "A",
            "legendFormat": "4xx - {{status}}"
          },
          {
            "expr": "sum(rate(http_requests_total{service=\"$service\",status=~\"5..\"}[5m])) by (status)",
            "refId": "B",
            "legendFormat": "5xx - {{status}}"
          }
        ],
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 8
        }
      },
      {
        "id": 4,
        "title": "$service - Active Spans (OpenTelemetry)",
        "type": "stat",
        "targets": [
          {
            "expr": "sum(tempo_spans_active{service=\"$service\"})",
            "refId": "A"
          }
        ],
        "gridPos": {
          "h": 4,
          "w": 6,
          "x": 12,
          "y": 8
        }
      },
      {
        "id": 5,
        "title": "$service - Memory Usage",
        "type": "graph",
        "targets": [
          {
            "expr": "process_resident_memory_bytes{service=\"$service\"} / 1024 / 1024",
            "refId": "A",
            "legendFormat": "RSS (MB)"
          }
        ],
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 16
        },
        "yaxes": [
          {
            "label": "memory (MB)",
            "format": "short"
          }
        ]
      },
      {
        "id": 6,
        "title": "$service - CPU Usage",
        "type": "graph",
        "targets": [
          {
            "expr": "rate(process_cpu_seconds_total{service=\"$service\"}[5m]) * 100",
            "refId": "A",
            "legendFormat": "CPU %"
          }
        ],
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 16
        },
        "yaxes": [
          {
            "label": "cpu %",
            "format": "percent"
          }
        ]
      }
    ],
    "time": {
      "from": "now-1h",
      "to": "now"
    }
  }
}
