{{- $namespace := .Values.global.namespace | default .Release.Namespace -}}
{{- range $name, $svc := .Values.services }}
{{- if $svc.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $name }}
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/part-of: {{ $.Chart.Name }}
  annotations:
    checksum/config: "{{ include "soma-agent.valuesChecksum" . }}"
spec:
  replicas: {{ $svc.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/part-of: {{ $.Chart.Name }}
    spec:
      containers:
        - name: {{ $name }}
          image: "{{ if contains ":" (last (splitList "/" (printf "%v" $svc.image))) }}{{ printf "%v" $svc.image }}{{ else }}{{ printf "%v:%v" $svc.image ($.Values.global.imageTag | default "latest") }}{{ end }}"
          imagePullPolicy: {{ $svc.imagePullPolicy | default $.Values.global.imagePullPolicy }}
          securityContext:
{{ toYaml ($svc.securityContext | default $.Values.global.securityContext) | indent 12 }}
          ports:
            - containerPort: {{ $svc.port }}
          {{- if $svc.envFromSecret }}
          envFrom:
            - secretRef:
                name: {{ $svc.envFromSecret }}
          {{- end }}
          {{- if $svc.env }}
          env:
          {{- range $env := $svc.env }}
            - name: {{ $env.name }}
              value: {{ $env.value | quote }}
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $svc.port }}
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ $svc.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
{{- if $svc.resources }}
            limits:
{{ toYaml $svc.resources.limits | indent 14 }}
            requests:
{{ toYaml $svc.resources.requests | indent 14 }}
{{- else }}
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "512Mi"
{{- end }}
{{- end }}
{{- end }}