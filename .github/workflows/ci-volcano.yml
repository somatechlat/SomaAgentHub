name: CI Volcano Sandbox

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/ci-volcano.yml'
      - 'scripts/volcano/**'
      - 'infra/k8s/local/volcano/**'
      - 'services/orchestrator/app/workflows/volcano_launcher.py'
      - 'services/orchestrator/workflows/activities.py'

jobs:
  volcano-sandbox:
    runs-on: ubuntu-latest
    env:
      KIND_CLUSTER_NAME: soma-volcano-ci
      VOLCANO_NAMESPACE: soma-agent-hub
      ARTIFACTS_DIR: ${{ github.workspace }}/artifacts/volcano
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kind CLI
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.22.0
          skipClusterCreation: true

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Bootstrap Volcano sandbox
        env:
          CLUSTER_NAME: ${{ env.KIND_CLUSTER_NAME }}
          K8S_VERSION: v1.29.4
          NAMESPACE: volcano-system
          VOLCANO_VERSION: 1.9.0
        run: |
          chmod +x scripts/volcano/*.sh
          ./scripts/volcano/bootstrap-kind.sh

      - name: Select kind context
        run: kubectl config use-context kind-${KIND_CLUSTER_NAME}

      - name: Verify Volcano components
        run: |
          kubectl get nodes
          kubectl get pods -n volcano-system

      - name: Run sample session workload
        env:
          VOLCANO_NAMESPACE: ${{ env.VOLCANO_NAMESPACE }}
          ARTIFACTS_DIR: ${{ env.ARTIFACTS_DIR }}
        run: |
          kubectl config use-context kind-${KIND_CLUSTER_NAME}
          ./scripts/volcano/run-sample-session.sh

      - name: Collect Volcano diagnostics
        if: always()
        run: |
          kubectl config use-context kind-${KIND_CLUSTER_NAME}
          kubectl get queue
          kubectl get podgroup -A
          kubectl get jobs -A

      - name: Upload Volcano artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: volcano-sample-artifacts
          path: ${{ env.ARTIFACTS_DIR }}

      - name: Cleanup sample workload
        if: always()
        env:
          VOLCANO_NAMESPACE: ${{ env.VOLCANO_NAMESPACE }}
        run: |
          kubectl config use-context kind-${KIND_CLUSTER_NAME}
          ./scripts/volcano/cleanup-sample.sh

      - name: Delete kind cluster
        if: always()
        run: |
          kind delete cluster --name ${KIND_CLUSTER_NAME} || true
