version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: somastack-kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    

  mao:
    build: ./services/mao
    container_name: somastack-mao
    environment:
      - SOMAGENT_MAO_DATABASE_URL=postgresql+asyncpg://somagent:somagent@postgres:5432/somagent
      - SOMAGENT_MAO_ORCHESTRATOR_URL=http://gateway-api:8080
    depends_on:
      - postgres
      - gateway-api
    ports:
      - "8200:8000"
  notification-orchestrator:
    build: ./services/notification-orchestrator
    container_name: somastack-notify
    depends_on:
      - kafka
    environment:
      - SOMAGENT_NOTIFY_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8920:8000"
volumes:
      - kafka-data:/bitnami/kafka

  postgres:
    image: postgres:15
    container_name: somastack-postgres
    environment:
      - POSTGRES_PASSWORD=somagent
      - POSTGRES_USER=somagent
      - POSTGRES_DB=somagent
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: somastack-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  somabrain:
    image: ghcr.io/somatechlat/somabrain:latest
    container_name: somastack-somabrain
    ports:
      - "9696:8000"
    environment:
      - LOG_LEVEL=info

  prometheus:
    image: prom/prometheus:latest
    container_name: somastack-prometheus
    volumes:
      - ./infra/local/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - somabrain

  grafana:
    image: grafana/grafana:latest
    container_name: somastack-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  kafka-data:
  postgres-data:
  redis-data:
  grafana-data:
