# docker-compose.yml
# This file defines the complete, persistent, multi-service Docker environment
# for local development, mirroring the Kubernetes deployment.

services:
  # --- Application Services ---
  gateway-api:
    build:
      context: .
      dockerfile: services/gateway-api/Dockerfile
    container_name: somaagenthub-gateway-api
    restart: unless-stopped
    ports:
      - "${GATEWAY_API_PORT:-10000}:10000"
    environment:
      - PORT=10000
      - ORCHESTRATOR_URL=http://orchestrator:10001
      - IDENTITY_SERVICE_URL=http://identity-service:10002
      - REDIS_URL=redis://redis:6379/0
      - AUTH_URL=http://identity-service:10002
      - KAFKA_BOOTSTRAP_SERVERS=redis:6379
    depends_on:
      orchestrator:
        condition: service_healthy
      identity-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - python -c "import urllib.request; urllib.request.urlopen('http://127.0.0.1:10000/ready', timeout=3)"
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  orchestrator:
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    container_name: somaagenthub-orchestrator
    restart: unless-stopped
    ports:
      - "${ORCHESTRATOR_PORT:-10001}:10001"
    environment:
      - PORT=10001
      - TEMPORAL_HOST=temporal-server:7233
    depends_on:
      temporal-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - python -c "import urllib.request; urllib.request.urlopen('http://127.0.0.1:10001/ready', timeout=3)"
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  identity-service:
    build:
      context: .
      dockerfile: services/identity-service/Dockerfile
    container_name: somaagenthub-identity-service
    restart: unless-stopped
    ports:
      - "${IDENTITY_SERVICE_PORT:-10002}:10002"
    environment:
      - PORT=10002
      - REDIS_URL=redis://redis:6379/0
      - SOMAGENT_IDENTITY_JWT_SECRET=dev-secret
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - python -c "import urllib.request; urllib.request.urlopen('http://127.0.0.1:10002/ready', timeout=3)"
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  app-postgres:
    image: postgres:16.4-alpine
    container_name: somaagenthub-app-postgres
    restart: unless-stopped
    ports:
      - "${APP_POSTGRES_PORT:-10004}:5432"
    environment:
      - POSTGRES_USER=somaagent
      - POSTGRES_PASSWORD=somaagent
      - POSTGRES_DB=somaagent
    volumes:
      - app-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U "${POSTGRES_USER:-somaagent}" -d "${POSTGRES_DB:-somaagent}"
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  # --- Infrastructure Services ---
  temporal-postgres:
    image: postgres:15-alpine
    container_name: somaagenthub-temporal-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    volumes:
      - temporal-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U "${POSTGRES_USER:-temporal}" -d "${POSTGRES_DB:-temporal}"
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  temporal-server:
    image: temporalio/auto-setup:1.22.4
    container_name: somaagenthub-temporal
    restart: unless-stopped
    depends_on:
      temporal-postgres:
        condition: service_healthy
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=false
      - ES_SEEDS=
      - LOG_LEVEL=info
    networks:
      - somaagenthub-network
    healthcheck:
      test:
        - CMD
        - tctl
        - --address
        - temporal-server:7233
        - cluster
        - health
      interval: 15s
      timeout: 10s
      retries: 10
    volumes:
      - ./infra/temporal/config:/etc/temporal/config/dynamicconfig:ro

  redis:
    image: redis:7-alpine
    container_name: somaagenthub-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-10003}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  qdrant:
    image: qdrant/qdrant:v1.11.0@sha256:22a2d455837380d5fa1a3455b87b4fe7af30aa4f4712f8a57027c61022113796
    container_name: somaagenthub-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_PORT:-10005}:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:6333/healthz || exit 1
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  clickhouse:
    image: clickhouse/clickhouse-server:24.7-alpine@sha256:3187267104ffa306377a9d41eedcdb9c3fade52db855f92021fb1498a070c7fb
    container_name: somaagenthub-clickhouse
    restart: unless-stopped
    ports:
      - "${CLICKHOUSE_HTTP_PORT:-10006}:8123"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:8123/ping || exit 1
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  minio:
    image: minio/minio:latest@sha256:a1a8bd4ac40ad7881a245bab97323e18f971e4d4cba2c2007ec1bedd21cbaba2
    container_name: somaagenthub-minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=somaagent
      - MINIO_ROOT_PASSWORD=local-developer
    command: server /data --console-address :9001
    ports:
      - "${MINIO_API_PORT:-10007}:9000"
      - "${MINIO_CONSOLE_PORT:-10008}:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:9000/minio/health/live || exit 1
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  # --- Secrets Management ---
  vault:
    build:
      context: .
      dockerfile: infra/vault/Dockerfile
    container_name: somaagenthub-vault
    restart: unless-stopped
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    ports:
      - "${VAULT_PORT:-8200}:8200"
    volumes:
      - vault-data:/vault/file
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:8200/v1/sys/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  # --- Observability Infrastructure ---
  loki:
    image: grafana/loki:latest
    container_name: somaagenthub-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ./infra/observability/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:3100/ready || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  tempo:
    image: grafana/tempo:latest
    container_name: somaagenthub-tempo
    restart: unless-stopped
    command:
      - "-config.file=/etc/tempo/local-config.yaml"
    ports:
      - "${TEMPO_OTLP_GRPC_PORT:-4317}:4317"
      - "${TEMPO_OTLP_HTTP_PORT:-4318}:4318"
    volumes:
      - ./infra/observability/tempo-config.yaml:/etc/tempo/local-config.yaml
      - tempo-data:/var/tempo
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:3200/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: somaagenthub-otel-collector
    restart: unless-stopped
    command:
      - "--config=/etc/otel-collector-config.yaml"
    volumes:
      - ./infra/observability/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "${OTEL_GRPC_PORT:-4317}:4317"
      - "${OTEL_HTTP_PORT:-4318}:4318"
      - "${OTEL_PROMETHEUS_PORT:-8888}:8888"
    environment:
      - GOGC=80
    healthcheck:
      test:
        - CMD
        - /healthcheck
      interval: 10s
      timeout: 5s
      retries: 6
    depends_on:
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
    networks:
      - somaagenthub-network

  prometheus:
    image: prom/prometheus:latest
    container_name: somaagenthub-prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./infra/observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:9090/-/healthy || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

  grafana:
    image: grafana/grafana:latest
    container_name: somaagenthub-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infra/observability/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://127.0.0.1:3000/api/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - somaagenthub-network

volumes:
  temporal-postgres-data:
    driver: local
    name: somaagenthub_temporal_postgres_data
  redis-data:
    driver: local
    name: somaagenthub_redis_data
  app-postgres-data:
    driver: local
    name: somaagenthub_app_postgres_data
  qdrant-data:
    driver: local
    name: somaagenthub_qdrant_data
  clickhouse-data:
    driver: local
    name: somaagenthub_clickhouse_data
  minio-data:
    driver: local
    name: somaagenthub_minio_data
  vault-data:
    driver: local
    name: somaagenthub_vault_data
  loki-data:
    driver: local
    name: somaagenthub_loki_data
  tempo-data:
    driver: local
    name: somaagenthub_tempo_data
  prometheus-data:
    driver: local
    name: somaagenthub_prometheus_data
  grafana-data:
    driver: local
    name: somaagenthub_grafana_data

networks:
  somaagenthub-network:
    name: somaagenthub-network
